console창 기능
> 내가 하려는 것 테스트 해보고 싶을 때
> 에러 확인할 때
※ 콘솔은 한줄씩만 작성할 수 있음


alert : 경고창
> 요새는 쓰지 않음 (커스텀 할 수 없고, 창이 떠있는동안 모든 js가 중단됌)

---
★ 데이터타입
- 숫자(number): integer(정수, 1), float(실수(소수점), 1.1) = 인터절와 플로트끼리 더할 수 있음
- 글자(string): ""로 묶어줘야 인식가능, 문자끼리 사칙연산 가능.

★ boolean 불리안이란? 
★ 무조건 정독 : https://velog.io/@untiring_dev/JS-Day45.-Boolean-%ED%83%80%EC%9E%85
- 참고링크(함수 자료형 변환 표): https://muckycode.blogspot.com/2015/01/javascript-boolean.html
- 모든 프로그래밍 언어에 존재하는 자료형, 값이 true 또는 false(0), 2개밖에 존재하지 않는 자료형 (= Boolean 자료형)
★ null이란? - 아무것도 없음. 아무것도 없는 상태로 채워짐 (◆ 자연적으로 발생x, 값이 없다는 것을 확실히 하기 위해 씀 ◆)
★ undefine이란? - 값을 찾을 수 없음 (변수는 선언했는데, 값은 정의되지 않음)
---

---
variable (변수) 작성이유 : 에러확률 ↓, 여러번 수정할 필요 x

★ 변수선언 시 const, let 차이점
> const : 한번 선언하면 값 변경 불가능 (변경하려고 하면 에러남)
> let : 값 변경 (업데이트) 가능 

★ let 사용방법
let myName = "yesolee";
어쩌구 저쩌구 중간에 여러 코드, 펑션 추가되어있는줄
myName = "ttore";
console.log(myName); = ttore 출력됌 ( yesolee가 ttore로 덮어씌워짐)
---

---
★ Array(배열): 설명이 필요하지 않은 데이터 리스트에 사용
> 항목 받아 오는 법: ex) test[0]
> 항목 추가 하는 법: test.push("yee");
---

---
★ Objects: 설명이 필요한 정보가 담긴 데이터 리스트
> 노마드코더 #2.6 Objects 복습
> 항목 작성하는 법 
const player = {
  name: "ttore",
  old:28,
  fat: false,
};
> 항목 받아 오는 법: ex) player, player.name = plater["name"]; 
> 항목 추가 하는 법: player.lastName = "lalala";
---


---
function = 반복해서 쓸수 있는 코드조각

function title(){
실행코드
}
title();

여기서 이제 argument를 보내야 하는데 argument란 인수 해당 function내에서 어떤 정보를 줄 수 있는 값을 의미한다
---


---
#  2.8 - 한번 더 보기
펑션의 괄호 안의 매개변수에서 아규먼트를 받아들일 수 있다.
ex)
function sayHello(nameOfPerson) {
console.log(nameOfPerson);
}

sayHello("nico")
sayHello("dal")
sayHello("lynn") // nameOfPerson은 "nico" "dal" "lynn" 을 받았다고 생각하면 됨.


아규먼트는 하나만 받을 수 있는게 아니라 여러개를 받을 수 있음.
ex)
function sayHello(nameOfPerson , age) {
console.log(nameOfPerson);
}

sayHello("nico" , 12);
sayHello("dal" , 20);
sayHello("lynn" , 23); // sayHello function의 매개변수 2개는 아래 2개의 argument를 받는 중임.

function의 값은 function 안에서만 존재한다.

오브젝트 안에서 매개변수가 아규먼트를 받는 방식
ex)
const player = {
name : function(Name) {
console.log("Your Name is " + Name + " 입니다.")
} ,
sayHello : function(Age) {
console.log("Your age is " + Age + " 입니다." )
}
}

player.sayHello(14)
player.name("james")
---